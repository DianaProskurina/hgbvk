using System;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        if (args.Length == 0 || args[0] == "-help")
        {
            ShowHelp();
            Environment.Exit(0);
        }

        string directoryPath = args[0];
        string searchPattern = args.Length > 1 ? args[1] : "*.*";

        try
        {
            if (!Directory.Exists(directoryPath))
            {
                Console.WriteLine("Directory does not exist.");
                Environment.Exit(1);
            }

            DirectoryInfo rootDir = new DirectoryInfo(directoryPath);
            ProcessDirectory(rootDir, searchPattern);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            Environment.Exit(1);
        }

        Environment.Exit(0);
    }

    static void ProcessDirectory(DirectoryInfo dir, string searchPattern)
    {
        FileInfo[] files = dir.GetFiles(searchPattern);
        int fileCount = 0;

        foreach (FileInfo file in files)
        {
            if ((file.Attributes & FileAttributes.Hidden) == FileAttributes.Hidden)
            {
                Console.WriteLine($"Hidden file: {file.FullName}");
            }

            if ((file.Attributes & FileAttributes.ReadOnly) == FileAttributes.ReadOnly)
            {
                Console.WriteLine($"Read-only file: {file.FullName}");
            }

            if ((file.Attributes & FileAttributes.Archive) == FileAttributes.Archive)
            {
                Console.WriteLine($"Archive file: {file.FullName}");
            }

            fileCount++;
        }

        Console.WriteLine($"Directory: {dir.FullName}");
        Console.WriteLine($"File count: {fileCount}");

        DirectoryInfo[] subDirs = dir.GetDirectories();
        foreach (DirectoryInfo subDir in subDirs)
        {
            ProcessDirectory(subDir, searchPattern);
        }
    }

    static void ShowHelp()
    {
        Console.WriteLine("Usage: Program <directoryPath> [<searchPattern>]");
        Console.WriteLine("Example: Program C:\\Users\\User\\Documents *.exe");
        Console.WriteLine("Options:");
        Console.WriteLine("  -help  Show help information");
    }
}
